!function(){"use strict";class e{constructor(){}get totalScore(){return n.getInstance().activeElementsScore.reduce(((e,t)=>e+t),0)}render(){document.querySelector(".score__number").textContent=String(this.totalScore)}static getInstance(){return e.instance||(e.instance=new e),e.instance}}class t{constructor(e){this.element=e,e.addEventListener("click",this.clickEventHandler.bind(this))}clickEventHandler(){this.element.classList.toggle("food--active"),e.getInstance().render()}}class n{constructor(){this.elements=document.querySelectorAll(".food"),this._activeElements=[],this._activeElementsScore=[],this.elements.forEach((e=>{new t(e)}))}get activeElements(){return this._activeElements=[],this.elements.forEach((e=>{e.classList.contains("food--active")&&this._activeElements.push(e)})),this._activeElements}get activeElementsScore(){return this._activeElementsScore=[],this.activeElements.forEach((e=>{const t=e.querySelector(".food__score");t&&this._activeElementsScore.push(Number(t.textContent))})),this._activeElementsScore}static getInstance(){return n.instance||(n.instance=new n),n.instance}}n.getInstance()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYnVuZGxlLmpzIiwibWFwcGluZ3MiOiJ5QkFDTyxNQUFNQSxFQUNUQyxlQUNJQyxpQkFFQSxPQURjQyxFQUFNQyxjQUNQQyxvQkFBb0JDLFFBQU8sQ0FBQ0MsRUFBT0MsSUFBVUQsRUFBUUMsR0FBTyxHQUU3RUMsU0FDSUMsU0FBU0MsY0FBYyxrQkFBa0JDLFlBQWNDLE9BQU9DLEtBQUtaLFlBRXZFYSxxQkFJSSxPQUhLZixFQUFNZ0IsV0FDUGhCLEVBQU1nQixTQUFXLElBQUloQixHQUVsQkEsRUFBTWdCLFVDYmQsTUFBTUMsRUFDVGhCLFlBQVlpQixHQUNSSixLQUFLSSxRQUFVQSxFQUNmQSxFQUFRQyxpQkFBaUIsUUFBU0wsS0FBS00sa0JBQWtCQyxLQUFLUCxPQUVsRU0sb0JBQ0lOLEtBQUtJLFFBQVFJLFVBQVVDLE9BQU8sZ0JBQ2hCdkIsRUFBTUksY0FDZEssVUNSUCxNQUFNTixFQUNURixjQUNJYSxLQUFLVSxTQUFXZCxTQUFTZSxpQkFBaUIsU0FDMUNYLEtBQUtZLGdCQUFrQixHQUN2QlosS0FBS2EscUJBQXVCLEdBQzVCYixLQUFLVSxTQUFTSSxTQUFTVixJQUNuQixJQUFJRCxFQUFLQyxNQUdiVyxxQkFPQSxPQU5BZixLQUFLWSxnQkFBa0IsR0FDdkJaLEtBQUtVLFNBQVNJLFNBQVNWLElBQ2ZBLEVBQVFJLFVBQVVRLFNBQVMsaUJBQzNCaEIsS0FBS1ksZ0JBQWdCSyxLQUFLYixNQUczQkosS0FBS1ksZ0JBRVpyQiwwQkFRQSxPQVBBUyxLQUFLYSxxQkFBdUIsR0FDNUJiLEtBQUtlLGVBQWVELFNBQVNWLElBQ3pCLE1BQU1jLEVBQVlkLEVBQVFQLGNBQWMsZ0JBQ3BDcUIsR0FDQWxCLEtBQUthLHFCQUFxQkksS0FBS0UsT0FBT0QsRUFBVXBCLGlCQUdqREUsS0FBS2EscUJBRWhCWixxQkFJSSxPQUhLWixFQUFNYSxXQUNQYixFQUFNYSxTQUFXLElBQUliLEdBRWxCQSxFQUFNYSxVQ2hDckJiLEVBQU1DLGMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9UeXBlU2NyaXB0LWZvb2QtYXBwLWxlc3Nvbi8uL2Rpc3Qvc2NvcmUuanMiLCJ3ZWJwYWNrOi8vVHlwZVNjcmlwdC1mb29kLWFwcC1sZXNzb24vLi9kaXN0L2Zvb2QuanMiLCJ3ZWJwYWNrOi8vVHlwZVNjcmlwdC1mb29kLWFwcC1sZXNzb24vLi9kaXN0L2Zvb2RzLmpzIiwid2VicGFjazovL1R5cGVTY3JpcHQtZm9vZC1hcHAtbGVzc29uLy4vZGlzdC9tYWluLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEZvb2RzIH0gZnJvbSBcIi4vZm9vZHMuanNcIjtcbmV4cG9ydCBjbGFzcyBTY29yZSB7XG4gICAgY29uc3RydWN0b3IoKSB7IH1cbiAgICBnZXQgdG90YWxTY29yZSgpIHtcbiAgICAgICAgY29uc3QgZm9vZHMgPSBGb29kcy5nZXRJbnN0YW5jZSgpO1xuICAgICAgICByZXR1cm4gZm9vZHMuYWN0aXZlRWxlbWVudHNTY29yZS5yZWR1Y2UoKHRvdGFsLCBzY29yZSkgPT4gdG90YWwgKyBzY29yZSwgMCk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5zY29yZV9fbnVtYmVyXCIpLnRleHRDb250ZW50ID0gU3RyaW5nKHRoaXMudG90YWxTY29yZSk7XG4gICAgfVxuICAgIHN0YXRpYyBnZXRJbnN0YW5jZSgpIHtcbiAgICAgICAgaWYgKCFTY29yZS5pbnN0YW5jZSkge1xuICAgICAgICAgICAgU2NvcmUuaW5zdGFuY2UgPSBuZXcgU2NvcmUoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gU2NvcmUuaW5zdGFuY2U7XG4gICAgfVxufVxuIiwiaW1wb3J0IHsgU2NvcmUgfSBmcm9tIFwiLi9zY29yZS5qc1wiO1xuZXhwb3J0IGNsYXNzIEZvb2Qge1xuICAgIGNvbnN0cnVjdG9yKGVsZW1lbnQpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50ID0gZWxlbWVudDtcbiAgICAgICAgZWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgdGhpcy5jbGlja0V2ZW50SGFuZGxlci5iaW5kKHRoaXMpKTtcbiAgICB9XG4gICAgY2xpY2tFdmVudEhhbmRsZXIoKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QudG9nZ2xlKFwiZm9vZC0tYWN0aXZlXCIpO1xuICAgICAgICBjb25zdCBzY29yZSA9IFNjb3JlLmdldEluc3RhbmNlKCk7XG4gICAgICAgIHNjb3JlLnJlbmRlcigpO1xuICAgIH1cbn1cbiIsImltcG9ydCB7IEZvb2QgfSBmcm9tIFwiLi9mb29kLmpzXCI7XG5leHBvcnQgY2xhc3MgRm9vZHMge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICB0aGlzLmVsZW1lbnRzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5mb29kXCIpO1xuICAgICAgICB0aGlzLl9hY3RpdmVFbGVtZW50cyA9IFtdO1xuICAgICAgICB0aGlzLl9hY3RpdmVFbGVtZW50c1Njb3JlID0gW107XG4gICAgICAgIHRoaXMuZWxlbWVudHMuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuICAgICAgICAgICAgbmV3IEZvb2QoZWxlbWVudCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXQgYWN0aXZlRWxlbWVudHMoKSB7XG4gICAgICAgIHRoaXMuX2FjdGl2ZUVsZW1lbnRzID0gW107XG4gICAgICAgIHRoaXMuZWxlbWVudHMuZm9yRWFjaCgoZWxlbWVudCkgPT4ge1xuICAgICAgICAgICAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0LmNvbnRhaW5zKFwiZm9vZC0tYWN0aXZlXCIpKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fYWN0aXZlRWxlbWVudHMucHVzaChlbGVtZW50KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0aGlzLl9hY3RpdmVFbGVtZW50cztcbiAgICB9XG4gICAgZ2V0IGFjdGl2ZUVsZW1lbnRzU2NvcmUoKSB7XG4gICAgICAgIHRoaXMuX2FjdGl2ZUVsZW1lbnRzU2NvcmUgPSBbXTtcbiAgICAgICAgdGhpcy5hY3RpdmVFbGVtZW50cy5mb3JFYWNoKChlbGVtZW50KSA9PiB7XG4gICAgICAgICAgICBjb25zdCBmb29kU2NvcmUgPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZm9vZF9fc2NvcmVcIik7XG4gICAgICAgICAgICBpZiAoZm9vZFNjb3JlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5fYWN0aXZlRWxlbWVudHNTY29yZS5wdXNoKE51bWJlcihmb29kU2NvcmUudGV4dENvbnRlbnQpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB0aGlzLl9hY3RpdmVFbGVtZW50c1Njb3JlO1xuICAgIH1cbiAgICBzdGF0aWMgZ2V0SW5zdGFuY2UoKSB7XG4gICAgICAgIGlmICghRm9vZHMuaW5zdGFuY2UpIHtcbiAgICAgICAgICAgIEZvb2RzLmluc3RhbmNlID0gbmV3IEZvb2RzKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIEZvb2RzLmluc3RhbmNlO1xuICAgIH1cbn1cbiIsImltcG9ydCB7IEZvb2RzIH0gZnJvbSBcIi4vZm9vZHMuanNcIjtcbkZvb2RzLmdldEluc3RhbmNlKCk7XG4iXSwibmFtZXMiOlsiU2NvcmUiLCJjb25zdHJ1Y3RvciIsInRvdGFsU2NvcmUiLCJGb29kcyIsImdldEluc3RhbmNlIiwiYWN0aXZlRWxlbWVudHNTY29yZSIsInJlZHVjZSIsInRvdGFsIiwic2NvcmUiLCJyZW5kZXIiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ0ZXh0Q29udGVudCIsIlN0cmluZyIsInRoaXMiLCJzdGF0aWMiLCJpbnN0YW5jZSIsIkZvb2QiLCJlbGVtZW50IiwiYWRkRXZlbnRMaXN0ZW5lciIsImNsaWNrRXZlbnRIYW5kbGVyIiwiYmluZCIsImNsYXNzTGlzdCIsInRvZ2dsZSIsImVsZW1lbnRzIiwicXVlcnlTZWxlY3RvckFsbCIsIl9hY3RpdmVFbGVtZW50cyIsIl9hY3RpdmVFbGVtZW50c1Njb3JlIiwiZm9yRWFjaCIsImFjdGl2ZUVsZW1lbnRzIiwiY29udGFpbnMiLCJwdXNoIiwiZm9vZFNjb3JlIiwiTnVtYmVyIl0sInNvdXJjZVJvb3QiOiIifQ==